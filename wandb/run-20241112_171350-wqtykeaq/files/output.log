100%|██████████████████████████████████████████████████| 10/10 [00:00<00:00, 34.09it/s, Warming up...]                                                                                 
 70%|███████████████████████████████████               | 1400000/2000000 [3:15:21<1:23:43, 119.44it/s, eval_return=-11.65]                                                             
Traceback (most recent call last):
  File "/home/skanda/InterIIT/MADDPG/maddpg/main.py", line 441, in <module>
    if 'base' in (yaml_config := yaml.load(cf, Loader=yaml.FullLoader)):
  File "/home/skanda/InterIIT/MADDPG/maddpg/main.py", line 274, in train
    f"{agent.agent_idx}-{name}-grad" : torch.var(param.grad).item(),
  File "/home/skanda/InterIIT/MADDPG/maddpg/main.py", line 47, in play_episode
    if (render):
  File "/home/skanda/InterIIT/MADDPG/maddpg/maddpg.py", line 62, in acts
    actions = [self.agents[ii].act_behaviour(torch.Tensor(new_obs[ii]).squeeze()) for ii in range(self.n_agents)]
  File "/home/skanda/InterIIT/MADDPG/maddpg/maddpg.py", line 62, in <listcomp>
    actions = [self.agents[ii].act_behaviour(torch.Tensor(new_obs[ii]).squeeze()) for ii in range(self.n_agents)]
  File "/home/skanda/InterIIT/MADDPG/maddpg/agent.py", line 50, in act_behaviour
    policy_output = self.policy(Tensor(obs))
  File "/home/skanda/.local/lib/python3.10/site-packages/torch/nn/modules/module.py", line 1736, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "/home/skanda/.local/lib/python3.10/site-packages/torch/nn/modules/module.py", line 1747, in _call_impl
    return forward_call(*args, **kwargs)
  File "/home/skanda/InterIIT/MADDPG/maddpg/networks.py", line 19, in forward
    # cnnOut = self.cnnlayer(obs.unsqueeze(-3))
  File "/home/skanda/.local/lib/python3.10/site-packages/torch/nn/modules/module.py", line 1736, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "/home/skanda/.local/lib/python3.10/site-packages/torch/nn/modules/module.py", line 1747, in _call_impl
    return forward_call(*args, **kwargs)
  File "/home/skanda/.local/lib/python3.10/site-packages/torch/nn/modules/container.py", line 250, in forward
    input = module(input)
  File "/home/skanda/.local/lib/python3.10/site-packages/torch/nn/modules/module.py", line 1736, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "/home/skanda/.local/lib/python3.10/site-packages/torch/nn/modules/module.py", line 1747, in _call_impl
    return forward_call(*args, **kwargs)
  File "/home/skanda/.local/lib/python3.10/site-packages/torch/nn/modules/linear.py", line 125, in forward
    return F.linear(input, self.weight, self.bias)
  File "/home/skanda/.local/lib/python3.10/site-packages/torch/nn/modules/module.py", line 1918, in __getattr__
    def __getattr__(self, name: str) -> Any:
KeyboardInterrupt
Traceback (most recent call last):
  File "/home/skanda/InterIIT/MADDPG/maddpg/main.py", line 441, in <module>
    if 'base' in (yaml_config := yaml.load(cf, Loader=yaml.FullLoader)):
  File "/home/skanda/InterIIT/MADDPG/maddpg/main.py", line 274, in train
    f"{agent.agent_idx}-{name}-grad" : torch.var(param.grad).item(),
  File "/home/skanda/InterIIT/MADDPG/maddpg/main.py", line 47, in play_episode
    if (render):
  File "/home/skanda/InterIIT/MADDPG/maddpg/maddpg.py", line 62, in acts
    actions = [self.agents[ii].act_behaviour(torch.Tensor(new_obs[ii]).squeeze()) for ii in range(self.n_agents)]
  File "/home/skanda/InterIIT/MADDPG/maddpg/maddpg.py", line 62, in <listcomp>
    actions = [self.agents[ii].act_behaviour(torch.Tensor(new_obs[ii]).squeeze()) for ii in range(self.n_agents)]
  File "/home/skanda/InterIIT/MADDPG/maddpg/agent.py", line 50, in act_behaviour
    policy_output = self.policy(Tensor(obs))
  File "/home/skanda/.local/lib/python3.10/site-packages/torch/nn/modules/module.py", line 1736, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "/home/skanda/.local/lib/python3.10/site-packages/torch/nn/modules/module.py", line 1747, in _call_impl
    return forward_call(*args, **kwargs)
  File "/home/skanda/InterIIT/MADDPG/maddpg/networks.py", line 19, in forward
    # cnnOut = self.cnnlayer(obs.unsqueeze(-3))
  File "/home/skanda/.local/lib/python3.10/site-packages/torch/nn/modules/module.py", line 1736, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "/home/skanda/.local/lib/python3.10/site-packages/torch/nn/modules/module.py", line 1747, in _call_impl
    return forward_call(*args, **kwargs)
  File "/home/skanda/.local/lib/python3.10/site-packages/torch/nn/modules/container.py", line 250, in forward
    input = module(input)
  File "/home/skanda/.local/lib/python3.10/site-packages/torch/nn/modules/module.py", line 1736, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "/home/skanda/.local/lib/python3.10/site-packages/torch/nn/modules/module.py", line 1747, in _call_impl
    return forward_call(*args, **kwargs)
  File "/home/skanda/.local/lib/python3.10/site-packages/torch/nn/modules/linear.py", line 125, in forward
    return F.linear(input, self.weight, self.bias)
  File "/home/skanda/.local/lib/python3.10/site-packages/torch/nn/modules/module.py", line 1918, in __getattr__
    def __getattr__(self, name: str) -> Any:
KeyboardInterrupt
